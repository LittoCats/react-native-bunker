const fs = require('fs');
const path = require('path');
const YAML = require('js-yaml');
const camelcase = require('camelcase');
const EventEmitter = require('events');
const {spawn} = require('child_process');

exports.ensureRNRoot = function (msg) {
  var projRoot = path.resolve('./');
  try {
    return ensureRNRoot(projRoot);
  }catch(e){
    console.log('ERROR:'.red, msg);
    console.error(e)
  }

  function ensureRNRoot(projRoot) {
    try {
      require(path.resolve(projRoot, 'app.json'));
      fs.accessSync(path.resolve(projRoot, 'node_modules', 'react-native'));
      return projRoot;
    }catch(e) {
      var parent = path.dirname(projRoot);
      if (projRoot === parent) throw e;
      return ensureRNRoot(parent);
    }
  }
}


exports.TickTock = function TickTock() {

  const ee = new EventEmitter();
  var isRuning = false;

  const TickTock = {
    get begin() {
      if (!isRuning) {
        setTimeout(begin, 100);
      }
      
      return TickTock;
    },
    get end() {
      if (isRuning) setTimeout(end, 100);
      return TickTock;
    }
  };

  return TickTock;

  function begin() {
    const tickTock = spawn('node', ['-e', `setInterval(function(){process.stdout.write('.')}, 1000);`], {
      stdio: [0, 1, 2]
    });
    
    ee.once('end', function () {
      tickTock.kill();
      process.stdout.write('.\n');
      isRuning = false;
    })  

    isRuning = true;
  }

  function end() {
    ee.emit('end');
  }
}


exports.camelcase = function (name) {
  return camelcase(name).replace(/^[a-z]/, function (name) {
    return name.toUpperCase();
  })
}
