# Application Package Manager 默认配制

bunker:
  dist: dist

# 依赖
# 所有的依赖通过 ${build}/entry.js 直接打包到bundle中，只能通过下面这种方式引用：
# 
#  const {React, React:{Component}} = apm.InternalModules.React;
# 
internal-modules:
  - react
  - react-native

# 
# 静态包直接打包到 bundle 中，无法动态更新
# 主要用于对 Application Package Manager 进行全局配制
# 
# 静态包中 通过 const apm = require('react-native-apm') 访问 Application Package Manager
# 
static-packages:

# 应用需要动态加载的包
# 
# 动态包，相互之间无影响，不允许循环依赖
# 加载完成后，返回包中的主模块，其它模块必须且只能通过主模块引用
# 
# 动态包通过 apm.loadPackage($name) 异步加载，
# 通过 apm.unloadPackage($name) 卸载 (暂未实现)
# 通过 apm.reloadPackage($name) 重新加载 （暂未实现）
# 
# 注意：如果包中的模块正在使用时被卸载，可能产生不可预知的错误
# 
# 静态包中 通过 const apm = require('react-native-apm') 访问 Application Package Manager
# main 模块不需在这里声名
# 
dynamic-packages:

# 主模块，app 加载完成后，通过该模块启动 app
main: 